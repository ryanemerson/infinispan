<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <version>13.0.0-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
   </parent>
   <modelVersion>4.0.0</modelVersion>

   <artifactId>infinispan-component-processor</artifactId>
   <packaging>jar</packaging>
   <name>Infinispan Component Annotation Processor</name>
   <description>Annotation processor for component and MBean annotations</description>
    <properties>
        <test.report.path>${project.build.testOutputDirectory}</test.report.path>
        <expression.properties.path>${basedir}/src/test/resources/expression.properties</expression.properties.path>
    </properties>
   

   <dependencies>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-component-annotations</artifactId>
         <scope>compile</scope>
      </dependency>
      <dependency>
         <groupId>org.kohsuke.metainf-services</groupId>
         <artifactId>metainf-services</artifactId>
      </dependency>

      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.google.testing.compile</groupId>
         <artifactId>compile-testing</artifactId>
      </dependency>
       <!--
            Test
        -->
	<dependency>
		<groupId>org.jboss.logging</groupId>
		<artifactId>jboss-logging</artifactId>
		<version>3.4.1.Final</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.jboss.logmanager</groupId>
		<artifactId>jboss-logmanager</artifactId>
		<version>2.1.17.Final-redhat-00001</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.jboss.forge.roaster</groupId>
		<artifactId>roaster-api</artifactId>
		<version>2.20.8.Final</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.jboss.forge.roaster</groupId>
		<artifactId>roaster-jdt</artifactId>
		<version>2.20.8.Final</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.infinispan</groupId>
		<artifactId>infinispan-commons-test</artifactId>
		<scope>test</scope>
	</dependency>
	<!-- https://mvnrepository.com/artifact/org.testng/testng -->
	<dependency>
		<groupId>org.testng</groupId>
		<artifactId>testng</artifactId>
		<version>6.8.8</version>
		<scope>test</scope>
	</dependency>
   </dependencies>
   
   

   <build>
    <testResources>
         <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
         </testResource>
      </testResources>
      <plugins>
         <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${version.maven-compiler-plugin}</version>
            <configuration>
               <release>8</release>
               <encoding>UTF-8</encoding>
               <excludes>
                  <exclude>**/package-info.java</exclude>
               </excludes>
               <annotationProcessorPaths>
                  <path>
                     <groupId>org.kohsuke.metainf-services</groupId>
                     <artifactId>metainf-services</artifactId>
                     <version>${versionx.org.kohsuke.metainf-services.metainf-services}</version>
                  </path>
               </annotationProcessorPaths>
            </configuration>
            <executions>
                    <!-- Define that asciidoc reports should be generated -->
                    <execution>
                        <id>test-compile-adoc</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <compilerArgs>
                                <arg>-Aorg.jboss.logging.tools.report.type=adoc</arg>
                                <arg>-Aorg.jboss.logging.tools.report.path=${test.report.path}</arg>
                                <arg>-Aorg.jboss.logging.tools.report.title=Test Title</arg>
                                <arg>-Aorg.jboss.logging.tools.expressionProperties=${expression.properties.path}</arg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                   <!--  Define that XML reports should be generated -->
                    <execution>
                        <id>test-compile-xml</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <compilerArgs>
                                <arg>-Aorg.jboss.logging.tools.report.type=xml</arg>
                                <arg>-Aorg.jboss.logging.tools.report.path=${test.report.path}</arg>
                                <arg>-Aorg.jboss.logging.tools.report.title=Test Title</arg>
                                <arg>-Aorg.jboss.logging.tools.expressionProperties=${expression.properties.path}</arg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                </executions>
         </plugin>
	<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <test.src.path>${project.build.testSourceDirectory}</test.src.path>
                        <test.generated.src.path>${project.build.directory}/generated-test-sources/test-annotations</test.generated.src.path>
                        <test.report.path>${test.report.path}</test.report.path>
                        <test.property>sysValue</test.property>
                        <test.skeleton.file.path>${project.build.testOutputDirectory}</test.skeleton.file.path>
                        <expressionPropertiesPath>${expression.properties.path}</expressionPropertiesPath>
                    </systemPropertyVariables>
                     <parallel>classes</parallel>
                </configuration>
            </plugin>
      </plugins>
   </build>
</project>
